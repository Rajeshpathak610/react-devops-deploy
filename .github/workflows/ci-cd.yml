name: CI/CD Pipeline - React DevOps Demo (Local Deployment)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  IMAGE_NAME: react-devops-demo

jobs:
  build-push-deploy:
    name: Build, Push & Deploy Locally
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm ci

      # Step 4: Run SonarQube Scan
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v3
        with:
          projectBaseDir: .
        env:
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: Rajeshpathak610_react-devops-deploy
          SONAR_ORGANIZATION: rajeshpathak610


      # Step 5: Build React app
      - name: Build React App
        run: npm run build

      # Step 6: Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest .

      # Step 7: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 8: Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      # Step 9: Pull image (simulate deployment)
      - name: Pull Docker Image
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      # Step 10: Run container (simulate local deployment)
      - name: Run Container
        run: |
          docker run -d -p 3000:80 ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest




